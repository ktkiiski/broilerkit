AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  # The key of the ZIP file in the deployment S3 bucket
  ApiRequestLambdaFunctionS3Key:
    Type: String
  # Root URL for the REST API
  ApiRoot:
    Type: String
  # Origin for the REST API
  ApiOrigin:
    Type: String
  # Domain for the REST API
  ApiDomainName:
    Type: String
  # Hosted zone name of the domain for the REST API
  ApiHostedZoneName:
    Type: String

Resources:
  # The role that is used by the API Lambda function execution
  LambdaExecutionIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Sub: ${AWS::Region}-lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-*:*
          - Effect: Allow
            Action:
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-*:*:*
          # Allow access to any SimpleDB domains related to this stack
          # NOTE: We assume that auto-generated domain names start with the stack name
          - Effect: Allow
            Action:
            - sdb:BatchDeleteAttributes
            - sdb:BatchPutAttributes
            - sdb:DeleteAttributes
            - sdb:DomainMetadata
            - sdb:GetAttributes
            - sdb:PutAttributes
            - sdb:Select
            Resource:
            - Fn::Sub: arn:aws:sdb:${AWS::Region}:${AWS::AccountId}:domain/${AWS::StackName}-*
          # Allow access to the user pool
          - Effect: Allow
            Action:
            - cognito-idp:AdminDeleteUser
            - cognito-idp:AdminGetUser
            - cognito-idp:AdminUpdateUserAttributes
            - cognito-idp:DeleteUser
            - cognito-idp:GetUser
            - cognito-idp:ListUsers
            - cognito-idp:UpdateUserAttributes
            Resource:
            # TODO: Could we restrict access to the particular userpool only?
            - Fn::Sub: arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*
      Path: "/"
      RoleName:
        Fn::Sub: "${AWS::StackName}-${AWS::Region}-lambdaRole"

  # API gateway REST API
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name:
        Fn::Sub: "${AWS::StackName}-api"

  # Deployment of the API gateway
  <ApiGatewayDeploymentName>:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi

  # Stage for the API gateway
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: <ApiGatewayDeploymentName>
      Variables:
        # Make the API root URL available as a stage variable
        ApiRoot:
          Ref: ApiRoot
        # Make the API origin available as a stage variable
        ApiOrigin:
          Ref: ApiOrigin
        # Make the website root URL available as a stage variable
        SiteRoot:
          Ref: SiteRoot
        # Make the website origin available as a stage variable
        SiteOrigin:
          Ref: SiteOrigin
        # Make the AWS region available as a stage variable
        Region:
          Ref: AWS::Region
      MethodSettings:
      # Enables CloudWatch logging for the API gateway
      - DataTraceEnabled: true
        HttpMethod: "*"
        LoggingLevel: INFO
        ResourcePath: "/*"
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName: api

  # Role for the API gateway for enabling CloudWatch logging
  ApiGatewayCloudWatchLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: ApiGatewayLoggingPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            - logs:PutLogEvents
            - logs:GetLogEvents
            - logs:FilterLogEvents
            Resource: "*"

  # Accout for the API Gateway for enabling CloudWatch logging
  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt: ["ApiGatewayCloudWatchLoggingRole", "Arn" ]
    DependsOn:
    - ApiGatewayCloudWatchLoggingRole

  # Custom domain name for the REST API
  ApiGatewayRestApiDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn:
        Ref: DomainCertificate
      DomainName:
        Ref: ApiDomainName

  # Removes the '/api' part from the REST API URL path
  ApiGatewayRestApiBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: ''
      DomainName:
        Ref: ApiGatewayRestApiDomainName
      RestApiId:
        Ref: ApiGatewayRestApi
      Stage:
        Ref: ApiGatewayStage

  # DNS domain name for the REST API
  ApiDNS:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName:
        Fn::Sub: "${ApiHostedZoneName}."
      Comment: "Domain for the API Gateway deployment"
      RecordSets:
        - Name:
            Fn::Sub: "${ApiDomainName}."
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName:
              Fn::GetAtt: ApiGatewayRestApiDomainName.DistributionDomainName

  # Append the API domain to the certificate
  DomainCertificate:
    Properties:
      SubjectAlternativeNames:
        - Ref: ApiDomainName

Outputs:
  ApiGatewayRestApiUrl:
    Description: "Base URL of the REST API"
    Value:
      Fn::Sub: "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/api"
