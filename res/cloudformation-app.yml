AWSTemplateFormatVersion: "2010-09-09"
Description: Stack for the deployed application
Parameters:
  # Root URL for the website HTML files
  SiteRoot:
    Type: String
  # Origin for the website HTML files
  SiteOrigin:
    Type: String
  # Domain for the website HTML files
  SiteDomainName:
    Type: String
  # Hosted zone name of the domain for the website HTML files
  SiteHostedZoneName:
    Type: String
  # Root URL for the static asset files
  AssetsRoot:
    Type: String
  # Domain for the static asset files
  AssetsDomainName:
    Type: String
  # Hosted zone name of the domain for the static asset files
  AssetsHostedZoneName:
    Type: String

Mappings:
  # Mapping of AWS region-specific information
  # Source: https://docs.aws.amazon.com/general/latest/gr/rande.html
  RegionMap:
    us-east-2:
      S3WebsiteEndpoint: s3-website.us-east-2.amazonaws.com
      S3HostedZoneId: Z2O1EMRO9K5GLX
    us-east-1:
      S3WebsiteEndpoint: s3-website-us-east-1.amazonaws.com
      S3HostedZoneId: Z3AQBSTGFYJSTF
    us-west-1:
      S3WebsiteEndpoint: s3-website-us-west-1.amazonaws.com
      S3HostedZoneId: Z2F56UZL2M1ACD
    us-west-2:
      S3WebsiteEndpoint: s3-website-us-west-2.amazonaws.com
      S3HostedZoneId: Z3BJ6K6RIION7M
    ca-central-1:
      S3WebsiteEndpoint: s3-website.ca-central-1.amazonaws.com
      S3HostedZoneId: Z1QDHH18159H29
    ap-south-1:
      S3WebsiteEndpoint: s3-website.ap-south-1.amazonaws.com
      S3HostedZoneId: Z11RGJOFQNVJUP
    ap-northeast-2:
      S3WebsiteEndpoint: s3-website.ap-northeast-2.amazonaws.com
      S3HostedZoneId: Z3W03O7B5YMIYP
    ap-northeast-3:
      S3WebsiteEndpoint: s3-website.ap-northeast-3.amazonaws.com
      S3HostedZoneId: Z2YQB5RD63NC85
    ap-southeast-1:
      S3WebsiteEndpoint: s3-website-ap-southeast-1.amazonaws.com
      S3HostedZoneId: Z3O0J2DXBE1FTB
    ap-southeast-2:
      S3WebsiteEndpoint: s3-website-ap-southeast-2.amazonaws.com
      S3HostedZoneId: Z1WCIGYICN2BYD
    ap-northeast-1:
      S3WebsiteEndpoint: s3-website-ap-northeast-1.amazonaws.com
      S3HostedZoneId: Z2M4EHUR26P7ZW
    eu-central-1:
      S3WebsiteEndpoint: s3-website.eu-central-1.amazonaws.com
      S3HostedZoneId: Z21DNDUVLTQW6Q
    eu-west-1:
      S3WebsiteEndpoint: s3-website-eu-west-1.amazonaws.com
      S3HostedZoneId: Z1BKCTXD74EZPE
    eu-west-2:
      S3WebsiteEndpoint: s3-website.eu-west-2.amazonaws.com
      S3HostedZoneId: Z3GKZC51ZF0DB4
    eu-west-3:
      S3WebsiteEndpoint: s3-website.eu-west-3.amazonaws.com
      S3HostedZoneId: Z3R1K369G5AVDG
    sa-east-1:
      S3WebsiteEndpoint: s3-website-sa-east-1.amazonaws.com
      S3HostedZoneId: Z7KQH4QJS55SO

Conditions:
  # Condition whether the assets and the website are stored
  # to separate AWS S3 buckets and have their own CloudFront distributions.
  # If false, then they are stored to the shared bucket.
  SeparateAssetsAndSiteS3Buckets:
    Fn::Not:
      - Fn::Equals:
        - Ref: SiteDomainName
        - Ref: AssetsDomainName
  # Condition whether the website domain starts with `www.`
  # indicating that the root domain should be redirected to that domain
  SiteIsWwwDomain:
    Fn::Equals:
      - "www"
      - Fn::Select:
        # Select the first item...
        - 0
        # ...from the dot-separated list of domain name items
        - Fn::Split:
          - "."
          - Ref: SiteDomainName

Resources:
  # S3 bucket for storing the website HTML files
  SiteS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName:
        Fn::Sub: "${AWS::StackName}-website"
      WebsiteConfiguration:
        IndexDocument: index.html
  # S3 bucket for storing the static asset files
  AssetsS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    # Only create if separate assets and website buckets
    Condition: SeparateAssetsAndSiteS3Buckets
    Properties:
      BucketName:
        Fn::Sub: "${AWS::StackName}-assets"
      WebsiteConfiguration:
        IndexDocument: index.html
  # S3 bucket that is just used for simple redirection from the root
  # domain to the www domain.
  RedirectS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    # Only create if the website domain starts with `www.`
    Condition: SiteIsWwwDomain
    Properties:
      # Because we are using this bucket as a hosted website,
      # it's name must match the corresponding domain, in this
      # case the Apex domain
      BucketName:
        Ref: SiteHostedZoneName
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName:
            Ref: SiteDomainName
          Protocol: https
  # Make website HTML files public for everyone
  SiteS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Ref: SiteS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AddPerm
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              Fn::Sub: "${SiteS3Bucket.Arn}/*"
  # Make static asset files public for everyone
  AssetsS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    # Only create if separate assets and website buckets
    Condition: SeparateAssetsAndSiteS3Buckets
    Properties:
      Bucket:
        Ref: AssetsS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AddPerm
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              Fn::Sub: "${AssetsS3Bucket.Arn}/*"
  # CloudFront distribution for the static asset files cached forever
  AssetsCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    # Only create if separate assets and website buckets
    Condition: SeparateAssetsAndSiteS3Buckets
    Properties:
      DistributionConfig:
        # Use a cheaper price class for now.
        # TODO: Make this configurable, as 'PriceClass_All' is better for production
        PriceClass: PriceClass_100
        Aliases:
          - Ref: AssetsDomainName
        Origins:
          - DomainName:
              Fn::Select:
                - 2
                - Fn::Split:
                  - "/"
                  - Fn::GetAtt: AssetsS3Bucket.WebsiteURL
            Id: AssetsS3BucketOrigin
            CustomOriginConfig:
              OriginProtocolPolicy: "http-only"
        Comment:
          Fn::Sub: "${AWS::StackName} static assets CloudFront distribution (cookieless)"
        Enabled: true
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: false
          TargetOriginId: AssetsS3BucketOrigin
          ViewerProtocolPolicy: "redirect-to-https"
        ViewerCertificate:
          AcmCertificateArn:
            Ref: DomainCertificate
          SslSupportMethod: "sni-only"
  # CloudFront distribution for the website HTML files
  SiteCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        # Use a cheaper price class for now.
        # TODO: Make this configurable, as 'PriceClass_All' is better for production
        PriceClass: PriceClass_100
        Aliases:
          - Ref: SiteDomainName
        Origins:
          - DomainName:
              Fn::Select:
                - 2
                - Fn::Split:
                  - "/"
                  - Fn::GetAtt: SiteS3Bucket.WebsiteURL
            Id: SiteS3BucketOrigin
            CustomOriginConfig:
              OriginProtocolPolicy: "http-only"
        Comment:
          Fn::Sub: "${AWS::StackName} website CloudFront distribution"
        Enabled: true
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: false
          TargetOriginId: SiteS3BucketOrigin
          ViewerProtocolPolicy: "redirect-to-https"
        ViewerCertificate:
          AcmCertificateArn:
            Ref: DomainCertificate
          SslSupportMethod: "sni-only"
  # DNS domain name for the host of the static asset files
  AssetsDNS:
    Type: "AWS::Route53::RecordSetGroup"
    # Only create if separate assets and website buckets
    Condition: SeparateAssetsAndSiteS3Buckets
    Properties:
      HostedZoneName:
        Fn::Sub: "${AssetsHostedZoneName}."
      Comment: "Domain for the CloudFront distribution of the static asset files"
      RecordSets:
        - Name:
            Fn::Sub: "${AssetsDomainName}."
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName:
              Fn::GetAtt: AssetsCloudFrontDistribution.DomainName
  # DNS domain name for the host of the website HTML files
  SiteDNS:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName:
        Fn::Sub: "${SiteHostedZoneName}."
      Comment: "Domain for the CloudFront distribution of the HTML website files"
      RecordSets:
        - Name:
            Fn::Sub: "${SiteDomainName}."
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName:
              Fn::GetAtt: SiteCloudFrontDistribution.DomainName
  # DNS domain name for the S3 bucket that redirects from the APEX domain to the website
  # NOTE: This does not support HTTPS!
  RedirectDNS:
    Type: "AWS::Route53::RecordSet"
    # Only create if the website domain starts with `www.`
    Condition: SiteIsWwwDomain
    Properties:
      HostedZoneName:
        Fn::Sub: "${SiteHostedZoneName}."
      Comment: "Domain for the redirection website hosted as a S3 bucket"
      Type: A
      Name:
        Fn::Sub: "${SiteHostedZoneName}."
      AliasTarget:
        HostedZoneId:
          Fn::FindInMap:
          - RegionMap
          - Ref: AWS::Region
          - S3HostedZoneId
        DNSName:
          Fn::FindInMap:
          - RegionMap
          - Ref: AWS::Region
          - S3WebsiteEndpoint

  # Certificate for the domains
  DomainCertificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName:
        Ref: SiteDomainName
      DomainValidationOptions:
        # Send validation emails using the top-level domains
        - DomainName:
            Ref: SiteDomainName
          ValidationDomain:
            Ref: SiteHostedZoneName
        - Fn::If:
          # If using separate assets and site domains...
          - SeparateAssetsAndSiteS3Buckets
          # ...then list them both
          - DomainName:
              Ref: AssetsDomainName
            ValidationDomain:
              Ref: AssetsHostedZoneName
          - Ref: AWS::NoValue
      SubjectAlternativeNames:
        - Fn::If:
          - SeparateAssetsAndSiteS3Buckets
          - Ref: AssetsDomainName
          - Ref: AWS::NoValue

Outputs:
  SiteS3BucketName:
    Value:
      Ref: SiteS3Bucket
  AssetsS3BucketName:
    Value:
      Fn::If:
        - SeparateAssetsAndSiteS3Buckets
        - Ref: AssetsS3Bucket
        - Ref: SiteS3Bucket
  SiteCloudFrontDistributionId:
    Value:
      Ref: SiteCloudFrontDistribution
  AssetsCloudFrontDistributionId:
    Value:
      Fn::If:
        - SeparateAssetsAndSiteS3Buckets
        - Ref: AssetsCloudFrontDistribution
        - Ref: SiteCloudFrontDistribution
