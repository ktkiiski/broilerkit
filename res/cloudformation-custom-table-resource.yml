Description: Custom CloudFormation resource for PostgreSQL database tables
Parameters:
  LambdaFunctionS3Bucket:
    Type: String
  LambdaFunctionS3Key:
    Type: String
  VpcSecurityGroupId:
    Type: String
  VpcSubnetIds:
    Type: CommaDelimitedList

Resources:
  CustomTableResource:
    Type: AWS::Lambda::Function
    Properties:
      Handler: migration.handler
      Role: !GetAtt CustomTableResourceRole.Arn
      Code:
        S3Bucket:
          Ref: LambdaFunctionS3Bucket
        S3Key:
          Ref: LambdaFunctionS3Key
      Runtime: nodejs10.x
      Timeout: 900  # = 15 minutes
      VpcConfig:
        SecurityGroupIds:
          - Ref: VpcSecurityGroupId
        SubnetIds:
          Ref: VpcSubnetIds
  CustomTableResourceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub /aws/lambda/${CustomTableResource}
  CustomTableResourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

Outputs:
  ServiceToken:
    Value: !GetAtt CustomTableResource.Arn
    Export:
      Name: !Sub ${AWS::StackName}:ServiceToken
  Role:
    Value: !Ref CustomTableResourceRole
    Export:
      Name: !Sub ${AWS::StackName}:Role
  RoleArn:
    Value: !GetAtt CustomTableResourceRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}:RoleArn
