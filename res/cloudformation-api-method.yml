AWSTemplateFormatVersion: "2010-09-09"
Resources:
  <ApiMethodName>LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: "/aws/lambda/${AWS::StackName}-<ApiMethodName>"

  <ApiMethodName>LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: DeploymentManagementS3Bucket
        S3Key:
          Ref: ApiRequestLambdaFunctionS3Key
      FunctionName:
        Fn::Sub: "${AWS::StackName}-<ApiMethodName>"
      Handler: api.request
      MemorySize: 1024
      Role:
        Fn::GetAtt: ["LambdaExecutionIamRole", "Arn"]
      Runtime: nodejs6.10
      Timeout: 6
    DependsOn:
    - <ApiMethodName>LogGroup
    - LambdaExecutionIamRole

  <ApiMethodName>ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: <ApiMethod>
      ResourceId:
        Ref: <ApiResourceName>
      RestApiId:
        Ref: ApiGatewayRestApi
      RequestParameters: {}
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: <ApiMethod>
        Type: AWS_PROXY
        Uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${<ApiMethodName>LambdaFunction.Arn}/invocations"
      MethodResponses: []

  ApiGatewayDeployment:
    DependsOn:
    - <ApiMethodName>ApiGatewayMethod
