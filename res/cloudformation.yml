AWSTemplateFormatVersion: "2010-09-09"
Description: Stack for the deployed application
Parameters:
  # Domain for the website HTML files
  SiteDomainName:
    Type: String
  # Hosted zone name of the domain for the website HTML files
  SiteHostedZoneName:
    Type: String
  # Domain for the static asset files
  AssetsDomainName:
    Type: String
  # Hosted zone name of the domain for the static asset files
  AssetsHostedZoneName:
    Type: String
Resources:
  # S3 bucket for storing the website HTML files
  SiteS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName:
        Fn::Sub: "${AWS::StackName}-website"
      WebsiteConfiguration:
        IndexDocument: index.html
  # S3 bucket for storing the static asset files
  AssetsS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName:
        Fn::Sub: "${AWS::StackName}-assets"
      WebsiteConfiguration:
        IndexDocument: index.html
  # Make website HTML files public for everyone
  SiteS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Ref: SiteS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AddPerm
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              Fn::Sub: "${SiteS3Bucket.Arn}/*"
  # Make static asset files public for everyone
  AssetsS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Ref: AssetsS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AddPerm
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              Fn::Sub: "${AssetsS3Bucket.Arn}/*"
  # CloudFront distribution for the static asset files cached forever
  AssetsCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
          - Ref: AssetsDomainName
        Origins:
          - DomainName:
              Fn::Select:
                - 2
                - Fn::Split:
                  - "/"
                  - Fn::GetAtt: AssetsS3Bucket.WebsiteURL
            Id: AssetsS3BucketOrigin
            CustomOriginConfig:
              OriginProtocolPolicy: "http-only"
        Comment:
          Fn::Sub: "${AWS::StackName} static assets CloudFront distribution (cookieless)"
        Enabled: true
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: false
          TargetOriginId: AssetsS3BucketOrigin
          ViewerProtocolPolicy: "redirect-to-https"
        ViewerCertificate:
          AcmCertificateArn:
            Ref: DomainCertificate
          SslSupportMethod: "sni-only"
  # CloudFront distribution for the website HTML files
  SiteCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
          - Ref: SiteDomainName
        Origins:
          - DomainName:
              Fn::Select:
                - 2
                - Fn::Split:
                  - "/"
                  - Fn::GetAtt: SiteS3Bucket.WebsiteURL
            Id: SiteS3BucketOrigin
            CustomOriginConfig:
              OriginProtocolPolicy: "http-only"
        Comment:
          Fn::Sub: "${AWS::StackName} website CloudFront distribution"
        Enabled: true
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: false
          TargetOriginId: SiteS3BucketOrigin
          ViewerProtocolPolicy: "redirect-to-https"
        ViewerCertificate:
          AcmCertificateArn:
            Ref: DomainCertificate
          SslSupportMethod: "sni-only"
  # DNS domain name for the host of the static asset files
  AssetsDNS:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName:
        Fn::Sub: "${AssetsHostedZoneName}."
      Comment: "Domain for the CloudFront distribution of the static asset files"
      RecordSets:
        - Name:
            Fn::Sub: "${AssetsDomainName}."
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName:
              Fn::GetAtt: AssetsCloudFrontDistribution.DomainName
  # DNS domain name for the host of the website HTML files
  SiteDNS:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName:
        Fn::Sub: "${SiteHostedZoneName}."
      Comment: "Domain for the CloudFront distribution of the HTML website files"
      RecordSets:
        - Name:
            Fn::Sub: "${SiteDomainName}."
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName:
              Fn::GetAtt: SiteCloudFrontDistribution.DomainName
  # Certificate for the domains
  DomainCertificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName:
        Ref: SiteDomainName
      SubjectAlternativeNames:
        - Ref: AssetsDomainName
Outputs:
  SiteS3BucketName:
    Value:
      Ref: SiteS3Bucket
  AssetsS3BucketName:
    Value:
      Ref: AssetsS3Bucket
  SiteCloudFrontDistributionId:
    Value:
      Ref: SiteCloudFrontDistribution
  AssetsCloudFrontDistributionId:
    Value:
      Ref: AssetsCloudFrontDistribution
